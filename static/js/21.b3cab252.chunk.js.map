{"version":3,"sources":["../node_modules/@larva.io/webcomponents/dist/esm/theme-af4fc7b7.js","../node_modules/@larva.io/webcomponents/dist/esm/helpers-ea65411a.js","../node_modules/@larva.io/webcomponents/dist/esm/lar-toggle.entry.js"],"names":["createColorClasses","color","length","undefined","getAppRoot","doc","querySelector","body","now","ev","timeStamp","Date","clamp","min","n","max","Math","renderHiddenInput","container","name","value","disabled","el","shadowRoot","attachShadow","input","ownerDocument","createElement","type","classList","add","appendChild","isEmpty","obj","Object","Array","includes","constructor","entries","Toggle","hostRef","registerInstance","this","larChange","createEvent","larFocus","larBlur","inputId","toggleIds","pivotX","activated","keyFocus","checked","onChange","onKeyUp","onFocus","emit","onBlur","isChecked","a","gesture","enable","createGesture","gestureName","gesturePriority","threshold","onStart","onMove","onEnd","disabledChanged","detail","currentX","event","preventDefault","shouldToggle","delta","nativeInput","focus","getValue","h","Host","class","assign","id","ref","r","getElement","deltaX","margin","style"],"mappings":"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","file":"static/js/21.b3cab252.chunk.js","sourcesContent":["/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nfunction createColorClasses(color) {\n  return (typeof color === 'string' && color.length > 0) ? {\n    'lar-color': true,\n    [`lar-color-${color}`]: true\n  } : undefined;\n}\n/**\n * Larva app selector wheret to append dynamic components\n */\nfunction getAppRoot(doc) {\n  return doc.querySelector('lar-app') || doc.body;\n}\n\nexport { createColorClasses as c, getAppRoot as g };\n","function hasShadowDom(el) {\n  return !!el.shadowRoot && !!el.attachShadow;\n}\nfunction now(ev) {\n  return ev.timeStamp || Date.now();\n}\nconst clamp = (min, n, max) => {\n  return Math.max(min, Math.min(n, max));\n};\nfunction renderHiddenInput(container, name, value, disabled) {\n  if (hasShadowDom(container)) {\n    let input = container.querySelector('input.aux-input');\n    if (!input) {\n      input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-input');\n      container.appendChild(input);\n    }\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || '';\n  }\n}\nfunction isEmpty(obj) {\n  return [Object, Array].includes((obj || {}).constructor) && !Object.entries((obj || {})).length;\n}\n\nexport { clamp as c, isEmpty as i, now as n, renderHiddenInput as r };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-0f1831ce.js';\nimport { c as createColorClasses } from './theme-af4fc7b7.js';\nimport { r as renderHiddenInput } from './helpers-ea65411a.js';\n\nconst toggleCss = \":host{-webkit-box-sizing:content-box !important;box-sizing:content-box !important;display:inline-block;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;width:3rem;height:1.7rem}:host(:focus){outline:none}:host(.lar-toggle-disabled){pointer-events:none;opacity:0.2}input{left:0;top:0;margin:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;pointer-events:none}.lar-toggle-icon{border-radius:0.85rem;-webkit-box-sizing:border-box;box-sizing:border-box;display:block;position:relative;width:100%;height:100%;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-webkit-transition:background-color 300ms;transition:background-color 300ms;background-color:transparent;overflow:hidden;pointer-events:none}.lar-toggle-inner{margin:0.0625rem;border-radius:0.85rem;width:1.45rem;height:1.45rem;-webkit-transition:width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms, -webkit-transform 300ms;transition:width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms, -webkit-transform 300ms;transition:transform 300ms, width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms;transition:transform 300ms, width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms, -webkit-transform 300ms;will-change:transform}:host(.lar-toggle-checked) .lar-toggle-icon::before{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0)}:host(.lar-toggle-checked) .lar-toggle-inner{-webkit-transform:translate3d(1.3rem, 0, 0);transform:translate3d(1.3rem, 0, 0)}:host(.lar-color-primary) .lar-toggle-inner,:host(.lar-color-primary.toggle-checked) .lar-toggle-icon{background:var(--lar-color-primary, #780bb7) !important}:host(.lar-color-primary.toggle-checked) .lar-toggle-inner{background:var(--lar-color-primary-contrast, #fff) !important}:host(.lar-color-primary) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-primary, #780bb7)}:host(.lar-color-secondary) .lar-toggle-inner,:host(.lar-color-secondary.toggle-checked) .lar-toggle-icon{background:var(--lar-color-secondary, #7fb800) !important}:host(.lar-color-secondary.toggle-checked) .lar-toggle-inner{background:var(--lar-color-secondary-contrast, #fff) !important}:host(.lar-color-secondary) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-secondary, #7fb800)}:host(.lar-color-tertiary) .lar-toggle-inner,:host(.lar-color-tertiary.toggle-checked) .lar-toggle-icon{background:var(--lar-color-tertiary, #00a6ed) !important}:host(.lar-color-tertiary.toggle-checked) .lar-toggle-inner{background:var(--lar-color-tertiary-contrast, #fff) !important}:host(.lar-color-tertiary) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-tertiary, #00a6ed)}:host(.lar-color-success) .lar-toggle-inner,:host(.lar-color-success.toggle-checked) .lar-toggle-icon{background:var(--lar-color-success, #7fb800) !important}:host(.lar-color-success.toggle-checked) .lar-toggle-inner{background:var(--lar-color-success-contrast, #fff) !important}:host(.lar-color-success) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-success, #7fb800)}:host(.lar-color-warning) .lar-toggle-inner,:host(.lar-color-warning.toggle-checked) .lar-toggle-icon{background:var(--lar-color-warning, #ffb400) !important}:host(.lar-color-warning.toggle-checked) .lar-toggle-inner{background:var(--lar-color-warning-contrast, #fff) !important}:host(.lar-color-warning) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-warning, #ffb400)}:host(.lar-color-danger) .lar-toggle-inner,:host(.lar-color-danger.toggle-checked) .lar-toggle-icon{background:var(--lar-color-danger, #f6511d) !important}:host(.lar-color-danger.toggle-checked) .lar-toggle-inner{background:var(--lar-color-danger-contrast, #fff) !important}:host(.lar-color-danger) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-danger, #f6511d)}:host(.lar-color-light) .lar-toggle-inner,:host(.lar-color-light.toggle-checked) .lar-toggle-icon{background:var(--lar-color-light, #f4f5f8) !important}:host(.lar-color-light.toggle-checked) .lar-toggle-inner{background:var(--lar-color-light-contrast, #000) !important}:host(.lar-color-light) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-light, #f4f5f8)}:host(.lar-color-medium) .lar-toggle-inner,:host(.lar-color-medium.toggle-checked) .lar-toggle-icon{background:var(--lar-color-medium, #d6d6d6) !important}:host(.lar-color-medium.toggle-checked) .lar-toggle-inner{background:var(--lar-color-medium-contrast, #000) !important}:host(.lar-color-medium) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-medium, #d6d6d6)}:host(.lar-color-dark) .lar-toggle-inner,:host(.lar-color-dark.toggle-checked) .lar-toggle-icon{background:var(--lar-color-dark, #222428) !important}:host(.lar-color-dark.toggle-checked) .lar-toggle-inner{background:var(--lar-color-dark-contrast, #fff) !important}:host(.lar-color-dark) .lar-toggle-icon{border:0.0625rem solid var(--lar-color-dark, #222428)}\";\n\nconst Toggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.larChange = createEvent(this, \"larChange\", 7);\n    this.larFocus = createEvent(this, \"larFocus\", 7);\n    this.larBlur = createEvent(this, \"larBlur\", 7);\n    this.inputId = `lar-tg-${toggleIds++}`;\n    this.pivotX = 0;\n    this.activated = false;\n    this.keyFocus = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the toggle is selected. Defaults to `false`.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the toggle. Defaults to `false`.\n     */\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     * Defaults to `on`.\n     */\n    this.value = 'on';\n    this.onChange = () => {\n      this.checked = !this.checked;\n    };\n    this.onKeyUp = () => {\n      this.keyFocus = true;\n    };\n    this.onFocus = () => {\n      this.larFocus.emit();\n    };\n    this.onBlur = () => {\n      this.keyFocus = false;\n      this.larBlur.emit();\n    };\n  }\n  checkedChanged(isChecked) {\n    this.larChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n  }\n  async disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async componentDidLoad() {\n    this.gesture = (await import('./index-9f8406fc.js')).createGesture({\n      el: this.el,\n      gestureName: 'toggle',\n      gesturePriority: 100,\n      threshold: 0,\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev),\n    });\n    this.disabledChanged();\n  }\n  onStart(detail) {\n    this.pivotX = detail.currentX;\n    this.activated = true;\n    // touch-action does not work in iOS\n    detail.event.preventDefault();\n    return true;\n  }\n  onMove(detail) {\n    const currentX = detail.currentX;\n    if (shouldToggle(this.checked, currentX - this.pivotX, -5)) {\n      this.checked = !this.checked;\n      this.pivotX = currentX;\n    }\n  }\n  onEnd(detail) {\n    const delta = detail.currentX - this.pivotX;\n    if (shouldToggle(this.checked, delta, 0)) {\n      this.checked = !this.checked;\n    }\n    this.activated = false;\n    this.nativeInput.focus();\n  }\n  getValue() {\n    return this.value || '';\n  }\n  render() {\n    const value = this.getValue();\n    renderHiddenInput(this.el, this.name, (this.checked ? value : ''), this.disabled);\n    return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(this.color)), { 'lar-toggle-activated': this.activated, 'lar-toggle-checked': this.checked, 'lar-toggle-disabled': this.disabled, 'lar-toggle-key': this.keyFocus }) }, h(\"div\", { class: \"lar-toggle-icon\" }, h(\"div\", { class: \"lar-toggle-inner\" })), h(\"input\", { type: \"checkbox\", onChange: this.onChange, onFocus: this.onFocus, onBlur: this.onBlur, onKeyUp: this.onKeyUp, checked: this.checked, id: this.inputId, name: this.name, value: value, disabled: this.disabled, ref: r => this.nativeInput = r }), h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nfunction shouldToggle(checked, deltaX, margin) {\n  if (checked) {\n    return (margin >= deltaX);\n  }\n  else {\n    return (-margin <= deltaX);\n  }\n}\nlet toggleIds = 0;\nToggle.style = toggleCss;\n\nexport { Toggle as lar_toggle };\n"],"sourceRoot":""}