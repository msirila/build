{"version":3,"sources":["../node_modules/@larva.io/webcomponents/dist/esm/_defineProperty-25fe5ce3.js","../node_modules/@larva.io/webcomponents/dist/esm/_baseAssignValue-22000207.js","../node_modules/@larva.io/webcomponents/dist/esm/_baseClone-b074bb2d.js","../node_modules/@larva.io/webcomponents/dist/esm/isNumber-0e6cbba8.js","../node_modules/@larva.io/webcomponents/dist/esm/lar-sliding-door.entry.js"],"names":["defineProperty","func","getNative","Object","e","baseAssignValue","object","key","value","hasOwnProperty","prototype","assignValue","objValue","call","eq","undefined","copyObject","source","props","customizer","isNew","index","length","newValue","hasOwnProperty$1","baseKeysIn","isObject","result","push","nativeKeysIn","isProto","isPrototype","keysIn","isArrayLike","arrayLikeKeys","freeExports","exports","nodeType","freeModule","module","Buffer","root","allocUnsafe","getPrototype","overArg","getPrototypeOf","getSymbolsIn","getOwnPropertySymbols","arrayPush","getSymbols","stubArray","getAllKeysIn","baseGetAllKeys","hasOwnProperty$2","cloneArrayBuffer","arrayBuffer","constructor","byteLength","Uint8Array","set","reFlags","symbolProto","Symbol","symbolValueOf","valueOf","initCloneByTag","tag","isDeep","symbol","Ctor","dataView","buffer","byteOffset","cloneDataView","typedArray","cloneTypedArray","regexp","exec","lastIndex","cloneRegExp","objectCreate","create","baseCreate","proto","nodeIsMap","nodeUtil","isMap","baseUnary","isObjectLike","getTag","nodeIsSet","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","stack","isFlat","isFull","isArr","isArray","array","input","initCloneArray","Array","copyArray","isFunc","isBuffer","slice","copy","cloneBuffer","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","keys","baseAssign","Stack","stacked","get","forEach","subValue","add","keysFunc","getAllKeys","iteratee","arrayEach","isNumber","baseGetTag","DoorState","SlidingDoorNode","hostRef","registerInstance","this","output","createEvent","request","icon","color","disableQuickActions","allowIndicationAutoColoring","log","loading","fullState","doorState","doorStateString","slidingTimerRunning","slidingTimerElapsed","slidingTimerTimeout","slidingTimerStartedAt","stopEnabled","el","shadowRoot","node","querySelector","emit","command","data","a","error","lastState","timer","startTimer","resetTimer","clearInterval","timerValue","setInterval","err","console","cmd","iconSmall","colorIconSmall","h","hideTitles","supTitle","mainTitle","subTitle","colorModal","colorInputs","size","slot","disabled","onClick","ev","sendCommand","t","getElement","style"],"mappings":"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","file":"static/js/13.c472176c.chunk.js","sourcesContent":["import { g as getNative } from './isLength-48d6e863.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport { defineProperty as d };\n","import { d as defineProperty } from './_defineProperty-25fe5ce3.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport { baseAssignValue as b };\n","import { i as isArray } from './isArray-80298bc7.js';\nimport { r as root, S as Symbol, i as isObjectLike } from './isObjectLike-69e8eb40.js';\nimport { i as isObject } from './isObject-7039fcda.js';\nimport { e as eq } from './isLength-48d6e863.js';\nimport { k as keys, h as isPrototype, i as isArrayLike, j as arrayLikeKeys, l as getSymbols, o as overArg, s as stubArray, a as arrayPush, m as baseGetAllKeys, U as Uint8Array, c as getTag, b as baseUnary, n as nodeUtil, d as isBuffer, e as Stack, g as getAllKeys } from './_getTag-9363a329.js';\nimport { b as baseAssignValue } from './_baseAssignValue-22000207.js';\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$1.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty$1.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$2.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty$2.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/** `Object#toString` result references. */\nvar mapTag$1 = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag$1;\n}\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n/** `Object#toString` result references. */\nvar setTag$1 = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag$1;\n}\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag$1 = '[object Boolean]',\n    dateTag$1 = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag$2 = '[object Map]',\n    numberTag$1 = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag$1 = '[object RegExp]',\n    setTag$2 = '[object Set]',\n    stringTag$1 = '[object String]',\n    symbolTag$1 = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag$1 = '[object ArrayBuffer]',\n    dataViewTag$1 = '[object DataView]',\n    float32Tag$1 = '[object Float32Array]',\n    float64Tag$1 = '[object Float64Array]',\n    int8Tag$1 = '[object Int8Array]',\n    int16Tag$1 = '[object Int16Array]',\n    int32Tag$1 = '[object Int32Array]',\n    uint8Tag$1 = '[object Uint8Array]',\n    uint8ClampedTag$1 = '[object Uint8ClampedArray]',\n    uint16Tag$1 = '[object Uint16Array]',\n    uint32Tag$1 = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag$1] = cloneableTags[dataViewTag$1] =\ncloneableTags[boolTag$1] = cloneableTags[dateTag$1] =\ncloneableTags[float32Tag$1] = cloneableTags[float64Tag$1] =\ncloneableTags[int8Tag$1] = cloneableTags[int16Tag$1] =\ncloneableTags[int32Tag$1] = cloneableTags[mapTag$2] =\ncloneableTags[numberTag$1] = cloneableTags[objectTag] =\ncloneableTags[regexpTag$1] = cloneableTags[setTag$2] =\ncloneableTags[stringTag$1] = cloneableTags[symbolTag$1] =\ncloneableTags[uint8Tag$1] = cloneableTags[uint8ClampedTag$1] =\ncloneableTags[uint16Tag$1] = cloneableTags[uint32Tag$1] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport { assignValue as a, baseClone as b, copyObject as c, getAllKeysIn as d, getPrototype as g };\n","import { i as isObjectLike, b as baseGetTag } from './isObjectLike-69e8eb40.js';\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nexport { isNumber as i };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-0f1831ce.js';\nimport { i as isArray } from './isArray-80298bc7.js';\nimport './isObjectLike-69e8eb40.js';\nimport { i as isObject } from './isObject-7039fcda.js';\nimport './isLength-48d6e863.js';\nimport './_getTag-9363a329.js';\nimport './_defineProperty-25fe5ce3.js';\nimport './_baseAssignValue-22000207.js';\nimport { i as isNumber } from './isNumber-0e6cbba8.js';\nimport { b as baseClone } from './_baseClone-b074bb2d.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nconst DoorState = {\n  OPEN: 'OPEN',\n  OPENING: 'OPENING',\n  CLOSED: 'CLOSED',\n  CLOSING: 'CLOSING',\n  UNKNOWN: 'UNKNOWN'\n};\n\nconst slidingDoorCss = \"\";\n\nconst SlidingDoorNode = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.output = createEvent(this, \"output\", 7);\n    this.request = createEvent(this, \"request\", 7);\n    /////// LarvaNode base properties\n    /**\n     * Component main icon\n     */\n    this.icon = 'off';\n    /**\n     * The color to use from your application's color palette.\n     * Detrouble options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     */\n    this.color = 'primary';\n    /**\n     * Disable quck actions\n     */\n    this.disableQuickActions = false;\n    /**\n     * Allow node indication color automatic change based on feedback/node value. Defaults to false\n     */\n    this.allowIndicationAutoColoring = false;\n    /**\n     * Is logging for this component enabled (lar-log subcomponent loaded)\n     */\n    this.log = true;\n    /////// LarvaNode base properties and events - end\n    this.loading = true;\n    this.fullState = {\n      doorState: undefined,\n      doorStateString: DoorState.UNKNOWN,\n      slidingTimerRunning: false,\n      slidingTimerElapsed: 0,\n      slidingTimerTimeout: 0,\n      slidingTimerStartedAt: 0,\n      stopEnabled: false\n    };\n  }\n  componentDidLoad() {\n    const el = this.el.shadowRoot || this.el;\n    this.node = el.querySelector('lar-node');\n    this.output.emit({ command: 'get' });\n  }\n  /**\n   * Larva error input\n   */\n  async error(data) {\n    if (this.node) {\n      this.node.error(data);\n    }\n    this.loading = false;\n  }\n  /**\n   * Input Larva event message (see above)\n   */\n  async input(data) {\n    if (isArray(data)) ;\n    else if (isObject(data)) {\n      const lastState = clone(this.fullState);\n      this.fullState = data;\n      if (this.fullState.slidingTimerRunning && isNumber(this.fullState.slidingTimerElapsed) && isNumber(this.fullState.slidingTimerTimeout)) {\n        if (!this.timer || lastState.slidingTimerStartedAt !== this.fullState.slidingTimerStartedAt) {\n          // restart the timer if slidingTimerStartedAt has changed\n          this.startTimer();\n        }\n      }\n      if (!this.fullState.slidingTimerRunning && this.timer) {\n        this.resetTimer();\n      }\n    }\n    this.loading = false;\n  }\n  resetTimer() {\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }\n  startTimer() {\n    this.timerValue = this.fullState.slidingTimerElapsed;\n    const intervalTime = 1000;\n    this.resetTimer();\n    this.timer = setInterval(() => {\n      try {\n        if (!this.fullState.slidingTimerRunning || this.timerValue > this.fullState.slidingTimerTimeout) {\n          this.resetTimer();\n          // timer should have been stopped by now\n          // make read request to get the state\n          this.output.emit({ command: 'get' });\n          this.loading = true;\n        }\n        this.timerValue += intervalTime;\n      }\n      catch (err) {\n        console.error(err);\n      }\n    }, intervalTime);\n  }\n  sendCommand(cmd) {\n    this.output.emit({ command: cmd });\n    this.loading = true;\n  }\n  render() {\n    let value = 'slidingDoor.stateUnknown';\n    let iconSmall = '';\n    let colorIconSmall = this.colorIconSmall;\n    switch (this.fullState.doorStateString) {\n      case DoorState.CLOSED: {\n        value = 'slidingDoor.stateClosed';\n        iconSmall = 'lock';\n        colorIconSmall = this.allowIndicationAutoColoring ? 'success' : this.colorIconSmall;\n        break;\n      }\n      case DoorState.OPEN: {\n        value = 'slidingDoor.stateOpen';\n        iconSmall = 'unlock';\n        colorIconSmall = this.allowIndicationAutoColoring ? 'danger' : this.colorIconSmall;\n        break;\n      }\n      case DoorState.OPENING: {\n        iconSmall = 'moving-cogs';\n        value = 'slidingDoor.stateOpening';\n        break;\n      }\n      case DoorState.CLOSING: {\n        iconSmall = 'moving-cogs';\n        value = 'slidingDoor.stateClosing';\n        break;\n      }\n    }\n    return (h(\"lar-node\", { value: value, hideTitles: this.hideTitles, icon: this.icon, iconSmall: iconSmall, color: this.color, supTitle: this.supTitle, mainTitle: this.mainTitle, subTitle: this.subTitle, colorModal: this.colorModal, colorInputs: this.colorInputs, colorIconSmall: colorIconSmall, loading: this.loading, log: this.log }, this.disableQuickActions === false &&\n      h(\"lar-button-push\", { size: \"small\", slot: \"titles\", color: this.colorInputs || this.color, disabled: this.loading || this.fullState.slidingTimerRunning || !this.fullState.doorStateString || this.fullState.doorStateString === DoorState.UNKNOWN || this.fullState.doorStateString === DoorState.OPENING || this.fullState.doorStateString === DoorState.CLOSING, onClick: ev => this.fullState.doorStateString === DoorState.CLOSED ? this.sendCommand('open') : this.sendCommand('close') }), h(\"lar-button-group\", null, h(\"lar-button\", { disabled: this.loading || this.fullState.doorStateString === DoorState.OPEN || this.fullState.doorStateString === DoorState.OPENING || this.fullState.doorStateString === DoorState.CLOSING, color: this.colorInputs || this.color, onClick: () => this.sendCommand('open') }, h(\"lar-translate\", { t: \"slidingDoor.open\" })), h(\"lar-button\", { disabled: this.loading || this.fullState.doorStateString === DoorState.CLOSED || this.fullState.doorStateString === DoorState.OPENING || this.fullState.doorStateString === DoorState.CLOSING, color: this.colorInputs || this.color, onClick: () => this.sendCommand('close') }, h(\"lar-translate\", { t: \"slidingDoor.close\" })), this.fullState.stopEnabled === true ?\n      h(\"lar-button\", { disabled: this.loading ||\n          !(this.fullState.doorState === undefined ||\n            this.fullState.slidingTimerRunning), color: this.colorInputs || this.color, onClick: () => this.sendCommand('stop') }, h(\"lar-translate\", { t: \"slidingDoor.stop\" })) : null)));\n  }\n  get el() { return getElement(this); }\n};\nSlidingDoorNode.style = slidingDoorCss;\n\nexport { SlidingDoorNode as lar_sliding_door };\n"],"sourceRoot":""}